// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"douyin/v2/user/app/rpc/internal/logic"
	"douyin/v2/user/app/rpc/internal/svc"
	"douyin/v2/user/app/rpc/user"
)

type UserRpcServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserRpcServer
}

func NewUserRpcServer(svcCtx *svc.ServiceContext) *UserRpcServer {
	return &UserRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *UserRpcServer) Register(ctx context.Context, in *user.RegisterReq) (*user.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserRpcServer) Login(ctx context.Context, in *user.LoginReq) (*user.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserRpcServer) GetUser(ctx context.Context, in *user.GetUserReq) (*user.GetUserResp, error) {
	l := logic.NewGetUserLogic(ctx, s.svcCtx)
	return l.GetUser(in)
}

func (s *UserRpcServer) FollowAction(ctx context.Context, in *user.FollowActionReq) (*user.FollowActionResp, error) {
	l := logic.NewFollowActionLogic(ctx, s.svcCtx)
	return l.FollowAction(in)
}

func (s *UserRpcServer) FollowList(ctx context.Context, in *user.FollowListReq) (*user.FollowListResp, error) {
	l := logic.NewFollowListLogic(ctx, s.svcCtx)
	return l.FollowList(in)
}

func (s *UserRpcServer) FollowerList(ctx context.Context, in *user.FollowerListReq) (*user.FollowerListResp, error) {
	l := logic.NewFollowerListLogic(ctx, s.svcCtx)
	return l.FollowerList(in)
}
