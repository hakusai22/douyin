// Code generated by goctl. DO NOT EDIT.
// Source: jwt.proto

package server

import (
	"context"
	Jwt2 "douyin/v2/jwt/app/rpc/Jwt"
	logic2 "douyin/v2/jwt/app/rpc/internal/logic"
	"douyin/v2/jwt/app/rpc/internal/svc"
)

type JwtRpcServer struct {
	svcCtx *svc.ServiceContext
	Jwt2.UnimplementedJwtRpcServer
}

func NewJwtRpcServer(svcCtx *svc.ServiceContext) *JwtRpcServer {
	return &JwtRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *JwtRpcServer) CreateToken(ctx context.Context, in *Jwt2.CreateTokenReq) (*Jwt2.CreateTokenResp, error) {
	l := logic2.NewCreateTokenLogic(ctx, s.svcCtx)
	return l.CreateToken(in)
}

func (s *JwtRpcServer) ParseToken(ctx context.Context, in *Jwt2.ParseTokenReq) (*Jwt2.ParseTokenResp, error) {
	l := logic2.NewParseTokenLogic(ctx, s.svcCtx)
	return l.ParseToken(in)
}

func (s *JwtRpcServer) IsValidToken(ctx context.Context, in *Jwt2.IsValidTokenReq) (*Jwt2.IsValidTokenResp, error) {
	l := logic2.NewIsValidTokenLogic(ctx, s.svcCtx)
	return l.IsValidToken(in)
}
